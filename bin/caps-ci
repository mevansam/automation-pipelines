#!/bin/bash

root_dir=$(cd $(dirname $BASH_SOURCE)/.. && pwd)
source $root_dir/bin/common
common::initialize

set -e

usage () {
    echo -e "\n${BLUE}USAGE: caps-ci logout|login|info\n"
    echo -e "    This utility will create an SSH tunnel to the Concourse environment that"
    echo -e "    runs the automation pipelines. It will also initialize the 'fly' CLI and"
    echo -e "    create a target to this concourse environment."
    echo -e "${NC}"
}

case "$1" in
    -?|--help|help)
        usage
        exit 0
        ;;
    login|info)
        action=$1    
        shift
        while [[ $# -gt 0 ]]; do
            case "$1" in
                -v|--debug)
                    set -x
                    ;;
                *)
                    echo -e "ERROR! Unknown option or argument value $1.\n"
                    usage
                    exit 1
                    ;;
            esac
            shift
        done
        ;;
    logout)
        shift
        [[ $# -eq 0 ]] || echo -e "\nLogging out of tunnel. Additional arguments '$@' will be ignored.\n"

        ps -ef | awk '/8080\:127\.0\.0\.1\:8080/{ print $2 }' 2>/dev/null | xargs kill -15
        exit 0
        ;;
    *)
        usage
        exit 1
        ;;
esac

common::read_terraform_output

host=$(echo -e "$tf_output" | awk '/bastion_admin_fqdn =/{ print $3 }')
password=$(echo -e "$tf_output" | awk '/concourse_admin_password =/{ print $3 }')

if [[ -z $host || -z $password ]]; then
    echo -e "\nERROR! Failed to retrieve required deployment attributes.\n"
    exit 1
fi

if [[ $action == login ]]; then

    set +e
    curl --max-time 2 $host:8080 >/dev/null 2>&1
    if [[ $? -ne 0 ]]; then
        set -e

        echo -e "\nEstablishing SSH tunnel in order to access Concourse. This may hang if you"
        echo -e "have not configured bastion public SSH and have not logged in to the VPN."
        ps -ef | awk '/8080\:127\.0\.0\.1\:8080/{ print $2 }' 2>/dev/null | xargs kill -15
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
            -i $workspace_path/bastion-admin-ssh-key.pem $TF_VAR_bastion_admin_user@$host \
            -L 8080:127.0.0.1:8080 -N >/dev/null 2>&1 &

        concourse_url=http://127.0.0.1:8080
    else
        set -e
        concourse_url=http://$host:8080
    fi

    echo -e "\nThe Concourse UI is available via the following URL: $concourse_url\n"
    echo -e "user: admin\npassword: $password\n"

    echo -e "  ...Logging in and synchronizing using the fly CLI."

    sleep 5

    set +e
    flyout=$(fly -t local login -k -c $concourse_url -u admin -p $password >/dev/null)
    if [[ $? -ne 0 ]]; then
        echo -e "\nERROR! Unable to login to Concourse using the fly CLI:\n${flyout}\n"
        exit 1
    fi

    fly -t local sync >/dev/null 2>&1
    echo -e "  ...Session established.\n"
fi

set +e
