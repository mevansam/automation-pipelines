---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: appbricks/tools

inputs:
- name: automation
- name: automation-extensions
- name: pivnet-download

outputs:
- name: upload_path

run:
  path: automation/lib/pipelines/pcf/install-and-upgrade/tasks/create-infrastructure/task.sh

params:
  TRACE: Y
  
  # Target IaaS type which is propogated
  # to all downstream deployment and 
  # operational configurations.
  # 
  # This must be one (in lowercase):
  #
  #   - vsphere
  #   - openstack
  #   - aws"
  #   - azure
  #   - google
  #
  IAAS:

  # Google Cloud Credentials
  GCP_SERVICE_ACCOUNT_KEY:
  GCP_PROJECT:
  GCP_REGION:
  
  # VSphere Credentials
  VSPHERE_SERVER:
  VSPHERE_USER:
  VSPHERE_PASSWORD:
  VSPHERE_ALLOW_UNVERIFIED_SSL: false

  # PowerDNS Credentials
  PDNS_SERVER_URL:
  PDNS_API_KEY:

  # S3 credentials if S3 is the Terraform
  # backend for the bootstrap state
  S3_ACCESS_KEY_ID:
  S3_SECRET_ACCESS_KEY:
  S3_DEFAULT_REGION:
  # Custom S3 end-point if not 
  # targetting AWS S3
  TF_STATE_S3_ENDPOINT:
  
  # The bucket where the Terraform state 
  # will be saved
  TERRAFORM_STATE_BUCKET:
  # Prefix to use with cloud resource names 
  # as well as the location of Terraform
  # state
  DEPLOYMENT_PREFIX:
  
  # Path for additional Terraform templates
  # that customize the default infrastructure
  # templates 
  TEMPLATE_OVERRIDE_PATH:
  
  # Inputs to PCF PAS infrastructure Terraform
  # templates
  TF_VAR_environment:
  TF_VAR_bootstrap_state_bucket:
  TF_VAR_bootstrap_state_prefix:
  
  TF_VAR_system_domain_prefix:
  TF_VAR_apps_domain_prefix:
  
  TF_VAR_pcf_ert_ssl_cert:
  TF_VAR_pcf_ert_ssl_key:
  TF_VAR_pcf_saml_ssl_cert:
  TF_VAR_pcf_saml_ssl_key:
  
  TF_VAR_pas_db_type: 'internal'
  TF_VAR_event_alerts_db_type: 'internal'
  TF_VAR_db_username:
  TF_VAR_db_password:
