source_up .envrc

PIPELINE=SANDBOX_deployment
TASK_PRE=create-infrastructure
TASK_POST=save-terraform-output

set +e
fly -t local gp -p $PIPELINE > $PWD/.pipeline.yml
if [[ $? != 0 ]]; then
  echo -e "\nPlease login to the bastion concourse environment by running 'caps-ci login'."
  exit 1
fi
set -e

PARAMS=$(bosh interpolate $PWD/.pipeline.yml --path /jobs/name=prepare-environment/plan/task=create-infrastructure/params)
rm $PWD/.pipeline.yml

eval $(echo -e "$PARAMS" \
  | sed 's|\\n|\\\\n|g' \
  | sed -e 's|^[[:space:]]*\([-_0-9a-zA-Z]*\): \(\S*\)|export \1=\2|' \
  | sed -e "s/=|/='/" \
  | sed "s/}/}'/")

echo -e "\nInitialize terraform state by running the following:\n\nterraform init \\"
case $IAAS in
  google)
    echo -e "  -backend-config=\"bucket=${TERRAFORM_STATE_BUCKET}\" \\"
    echo -e "  -backend-config=\"prefix=${DEPLOYMENT_PREFIX}\" \\"
    ;;
  aws|vsphere)
    echo -e "  -backend-config=\"bucket=${TERRAFORM_STATE_BUCKET}\" \\"
    echo -e "  -backend-config=\"key=${DEPLOYMENT_PREFIX}\" \\"
    ;;
esac
echo -e "  ../$IAAS\n"
