# Insert a wait-if-apply-in-progress task to the 
# configure jobs after the 'get' aggregation step.
# This will ensure that tiles are not staged if
# an apply is in progress,
- type: replace
  path: /jobs/name=configure-${product_name}-tile/plan/0:after
  value:
    task: wait-if-apply-in-progress
    file: automation/lib/tasks/opsman/wait-opsman/task.yml
    params:
      OPSMAN_HOST: ((opsman_host))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      OPSMAN_CLIENT_ID: ((opsman_client_id))
      OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
      
# Insert a wait-if-stopped task to the configure jobs
# after the 'get' aggregation step. This will ensure 
# that tiles are not staged if environment is in a
# "stopped" state.
- type: replace
  path: /jobs/name=configure-${product_name}-tile/plan/0:after
  value:
    task: wait-if-stopped
    file: automation/lib/inceptor/tasks/wait-on-state/task.yml
    params: 
      WAIT_ON_STATE: stopped
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))

# Insert release manifest generation task to the 
# configure jobs after the 'get' aggregation step.
# This will ensure the release manifest is created 
# and sent with any success/failure notifications.
# - type: replace
#   path: /jobs/name=configure-${product_name}-tile/plan/0:after
#   value:
#     task: create-release-manifest
#     file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/create-release-manifest/task.yml
#     input_mapping:
#       versions: product-versions
#       input-files: configure-${product_name}-tile-job-info
#     output_mapping: 
#       output-files: configure-${product_name}-tile-job-info
#     params:
#       CONCOURSE_URL: ((concourse_url))
#       CONCOURSE_USER: ((concourse_user))
#       CONCOURSE_PASSWORD: ((concourse_password))
#       AUTOS3_URL: ((autos3_url))
#       AUTOS3_ACCESS_KEY: ((autos3_access_key))
#       AUTOS3_SECRET_KEY: ((autos3_secret_key))
#       OPSMAN_HOST: ((opsman_host))
#       OPSMAN_USERNAME: ((opsman_admin_username))
#       OPSMAN_PASSWORD: ((opsman_admin_password))
#       OPSMAN_CLIENT_ID: ((opsman_client_id))
#       OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
#       ENVIRONMENT: ((environment))
#       VERSION_ROW_STYLE: 'color:silver;'
#       NEW_VERSION_ROW_STYLE: 'color:black;'
#       JOB_NAME: configure-${product_name}-tile
