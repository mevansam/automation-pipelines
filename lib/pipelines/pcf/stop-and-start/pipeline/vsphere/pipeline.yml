---

common:

- &params
  TRACE: ((trace))
  IAAS: ((iaas_type))
  GCP_PROJECT: ((gcp_project_id))
  GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
  LABEL: ((label))
  OPSMAN_HOST: ((opsman_host))
  OPSMAN_USERNAME: ((opsman_username))
  OPSMAN_PASSWORD: ((opsman_password))
  OPSMAN_DECRYPTION_KEY: ((opsman_pass_phrase))
  OPSMAN_CLIENT_ID: ((pcfops_client))
  OPSMAN_CLIENT_SECRET: ((pcfops_secret))

jobs:

#
# Stop PCF
#

- name: stop-pcf
  serial: true
  serial_groups: [stop-and-start]
  on_failure:
    do:
    - task: notify on stop-pcf failure
  on_success:
    do:
    - task: notify on stop-pcf success
  plan:

  - aggregate:
    - get: automation
    - get: inceptor
    - get: started

  # If an "apply" is in progress on PCF Ops 
  # Manager then wait until it completes
  - task: wait-opsman-clear
    file: automation/lib/tasks/opsman/wait-opsman/task.yml
    params:
      OPSMAN_HOST: ((opsman_host))
      OPSMAN_USERNAME: ((opsman_username))
      OPSMAN_PASSWORD: ((opsman_password))
      OPSMAN_CLIENT_ID: ((pcfops_client))
      OPSMAN_CLIENT_SECRET: ((pcfops_secret))

  - task: set-stopped-state
    file: inceptor/tasks/toggle-state/task.yml
    params: 
      OFF_STATE: started
      ON_STATE: stopped
      VERSION_INCREMENT: 0
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))

  - task: new-job-session
    file: automation/lib/tasks/opsman/new-job-session/task.yml
    params: 
      <<: *params

  - task: stop-deployments
    file: automation/lib/tasks/bosh/stop-deployment/task.yml
    params: 
      <<: *params

#
# Start PCF
#

- name: start-pcf
  serial: true
  serial_groups: [stop-and-start]
  on_failure:
    do:
    - task: notify on start-pcf failure
  on_success:
    do:
    - task: notify on start-pcf success
  plan:

  - aggregate:
    - get: automation
    - get: inceptor
    - get: stopped

  - task: new-job-session
    file: automation/lib/tasks/opsman/new-job-session/task.yml
    params: 
      <<: *params

  - task: start-deployments
    file: automation/lib/tasks/bosh/start-deployment/task.yml
    params: 
      <<: *params

  - task: set-started-state
    file: inceptor/tasks/toggle-state/task.yml
    params: 
      OFF_STATE: stopped
      ON_STATE: started
      VERSION_INCREMENT: 1
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))

resources:

- name: automation
  type: git
  source:
    uri: ((automation_pipelines_repo))
    branch: ((automation_pipelines_branch))

- name: started
  type: s3
  source:
    bucket: pcf
    endpoint: ((autos3_url))
    access_key_id: ((autos3_access_key))
    secret_access_key: ((autos3_secret_key))
    regexp: started/started-(.*)

- name: stopped
  type: s3
  source:
    bucket: pcf
    endpoint: ((autos3_url))
    access_key_id: ((autos3_access_key))
    secret_access_key: ((autos3_secret_key))
    regexp: stopped/stopped-(.*)
